{
   "$id": "https://earthdata.nasa.gov/schema/generics/config",
   "$schema": "http://json-schema.org/draft-07/schema#",
   "title": "Generic-Config",
   "description": "This scheme defines how index configurations are to be defined. These index definitions support both Elastic and Graph-DB",
   "type": "object",
   "additionalProperties": false,
   "properties": {
        "MetadataSpecification": {
            "description": "Contains several fields to define the specifics of the grid",
            "$ref": "#/definitions/MetadataSpecificationType"},
        "SubConceptType": {
          "type": "string",
          "minLength": 1,
          "maxLength": 4
        },
        "Generic": {"$ref": "#/definitions/GenericType"},
        "IndexSetup" : {
          "description": "Contains fields for index level configurations in Elastic",
          "$ref": "#/definitions/IndexSetupType"
        },
        "IndexConfiguration" : {
          "description": "Contains fields related to how Indexes should be processed when creating the elastic document.",
          "$ref": "#/definitions/IndexConfigurationType"
        },
        "Indexes": {
            "description": "A list of indexes to be added to the elastic document.",
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {"$ref": "#/definitions/IndexType"}
        },
        "Validations": {
            "type": "array",
            "uniqueItems": true,
            "minItems": 1,
            "items": {
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "Fields": {
                        "description": "The field to validate, defined as a jq style path",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "examples": [".RootElement.SubElement"],
                            "minLength": 1
                        },
                        "minItems": 1
                    },
                    "ValidationType": {
                        "description": "The type of validation to perform on the field",
                        "type": "string",
                        "enum": ["unique" ,"regex", "length", "value"],
                        "default": "regex"
                    },
                    "ValidationValue": {
                        "$comment": "This is the value to validate against. The type of value depends on the ValidationType.",
                        "type": ["string", "number"]
                    }
                },
                "required": ["Fields", "ValidationType"]
            }
        }
    },
    "required": ["MetadataSpecification", "Generic"],
    "definitions": {
        "MetadataSpecificationType": {
            "type": "object",
            "additionalProperties": false,
            "description": "This object requires any metadata record that is validated by this schema to provide information about the schema.",
            "properties": {
                "URL": {
                    "description": "This element represents the URL where the schema lives. The schema can be downloaded.",
                    "type": "string",
                    "const": "https://cdn.earthdata.nasa.gov/generic/config/v0.0.1"
                },
                "Name": {
                    "description": "This element represents the name of the schema.",
                    "type": "string",
                    "const": "Generic-Config"
                },
                "Version": {
                    "description": "This element represents the version of the schema.",
                    "type": "string",
                    "const": "0.0.1"
                }
            },
            "required": ["URL", "Name", "Version"]
        },
        "GenericType": {
          "type": "object",
          "additionalProperties": false,
          "Description": "The matching schema for this index configuration",
          "properties": {
            "Name": {"type": "string"},
            "Version": {"type": "string"}
          },
          "required": ["Name", "Version"]
        },
        "IndexSetupType": {
          "description": "Define Elastic configurations for the entire index. Changes here will affect lucine",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "index" : {
              "description": "Settings passed along directly to lucine",
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "number_of_shards" : {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 32
                },
                "number_of_replicas" : {
                  "type": "number",
                  "minimum": 1,
                  "maximum": 32
                },
                "refresh_interval" : {
                  "type": "string",
                  "pattern": "[0-9]+s"
                }
              }
            }
          }
        },
        "IndexConfigurationType": {
          "description": "CMR Settings (not Elastic settings) to use while parsing and handling the index list",
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "AllowAppending" :{
              "description": "true means that indexes with the same name will be appended, not overwritten",
              "type": "boolean"
            },
            "AdditionalKeywords": {
              "description": "A list of simple, top level fields to be added to the keyword (freetext)",
              "type": "array",
              "items": {
                "type": "string",
                "minLength": 1
              },
              "minItems": 1
            },
            "IndexName" : {
              "description": "This is the name of the Elastic Index when the default is not to be used, change this when you need to change the type of an existing index.",
              "type": "string",
              "example": "1_generic_service_draft",
              "pattern": "^[0-9]+_generic_[0-9a-z_]+$",
              "minimum": 1,
              "maximum": 64
            },
            "IndexNameForRevisions" : {
              "description": "This is the name of the Elastic Index, for storing multiple revisions, when the default is not to be used, change this when you need to change the type of an existing index.",
              "type": "string",
              "example": "1_all_generic_service_draft_revisions",
              "pattern": "^[0-9]+_all_generic_[0-9a-z_]+_revisions$",
              "minimum": 1,
              "maximum": 64
            }
          }
        },
        "IndexType": {
            "$comment": "This object is subject to major change",
            "type": "object",
            "additionalProperties": false,
            "description": "Define one index that needs to be created",
            "properties": {
                "Description": {
                    "description": "Note about the setting",
                    "type": "string",
                    "minLength": 1
                },
                "Field": {
                    "description": "The Field to index, defined as a jq style path",
                    "type": "string",
                    "examples": [".RootElement.SubElement"],
                    "minLength": 1
                },
                "Mapping": {
                  "description": "The data format to map this index to. string is of type 'keyword', and 'token' is the same as string but uses a 'whitespace' analyzer meaning each word can be found.",
                  "type": "string",
                  "default": "string",
                  "enum": ["date", "int", "string", "token"]
                },
                "Type": {
                    "description": "target index software to host the index",
                    "type": "string",
                    "enum": ["elastic", "graph"],
                    "default": "elastic"
                },
                "Name": {
                    "description": "The name to give the index within the index server",
                    "type": "string",
                    "minLength": 1
                },
                "Indexer": {
                    "description": "The name of the function in code that will generate the index for this field",
                    "type": "string",
                    "minLength": 1
                },
                "Configuration": {
                    "decription": "Any valid JSON can be defined here and it will be passed to the indexer as a configuration for this specific index",
                    "additionalProperties": true
                }
            },
            "required": ["Field", "Name"]
        }
    }
}